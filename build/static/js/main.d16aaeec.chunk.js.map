{"version":3,"sources":["utils.ts","config.ts","App.tsx","index.tsx"],"names":["nearConfig","env","console","log","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","getConfig","keyStore","keyStores","BrowserLocalStorageKeyStore","connect","headers","near","window","walletConnection","WalletConnection","split","accountId","getAccountId","Contract","account","viewMethods","changeMethods","contract","logout","signOut","location","replace","origin","pathname","login","requestSignIn","hc_db","axios","create","baseURL","App","nft_mint","id","dataUri","textToImage","generateSync","fontSize","fontFamily","contractId","methodName","args","gas","attachedDeposit","BigInt","toString","React","useState","loading","setLoading","minted","handleSeparate","get","data","handleMint","functionCall","response","useEffect","isSignedIn","className","style","textAlign","marginTop","Button","variant","disabled","onClick","root","ReactDOM","createRoot","document","getElementById","nearInitPromise","initContract","then","render","StrictMode","catch","err"],"mappings":"qSAGA,IAAIA,ECCG,SAAmBC,GAEtB,OADFC,QAAQC,IAAI,YAAaF,GACfA,GACJ,IAAK,aACL,IAAK,UACH,MAAO,CACLG,UAAW,UACXC,QAAS,+BACTC,aAVkB,eAWlBC,UAAW,0BACXC,UAAW,kCACXC,YAAa,qCAEjB,IAAK,cACL,IAAK,UACH,MAAO,CACLL,UAAW,UACXC,QAAS,+BACTC,aArBkB,kBAsBlBC,UAAW,kCACXC,UAAW,kCACXC,YAAa,qCAEjB,QACE,MAAMC,MAAM,6BAAD,OAA8BT,EAA9B,4CDzBJU,CAAU,WACrBC,EAAkD,IAAIC,YAAUC,4B,sDAE/D,qGACHZ,QAAQC,IAAI,gBADT,SAEgBY,kBAAQ,aAAEH,WAAUI,QAAS,IAAOhB,IAFpD,cAEGiB,EAFH,OAGHC,OAAOC,iBAAmB,IAAIC,mBAAiBH,EAAMjB,EAAWM,aAAae,MAAM,KAAK,IACxFH,OAAOI,UAAYJ,OAAOC,iBAAiBI,eAJxC,SAKqB,IAAIC,WAASN,OAAOC,iBAAiBM,UAAWzB,EAAWM,aAAc,CAC7FoB,YAAa,CAAC,gBAAiB,mBAAoB,kBAAmB,qBACtEC,cAAe,CAAC,WAAY,mCAP7B,cAKHT,OAAOU,SALJ,yBASIV,OAAOU,UATX,6C,sBAYA,SAASC,IACZX,OAAOC,iBAAiBW,UACxBZ,OAAOa,SAASC,QAAQd,OAAOa,SAASE,OAASf,OAAOa,SAASG,UAG9D,SAASC,IACZjB,OAAOC,iBAAiBiB,cAAcpC,EAAWM,c,4BEf/C+B,EAAQC,IAAMC,OAAO,CACzBC,QAAS,uDA4FIC,MAxFf,WAEE,IAAMC,EAAW,SAACC,GAChB,IAAMC,EAAUC,IAAYC,aAAZ,UAA4BH,GAAM,CAChDI,SAAU,GACVC,WAAY,UAEd,MAAO,CACTC,WAAY/B,OAAOU,SAASqB,WAC5BC,WAAY,WACZC,KACA,CACE,SAAYR,EACZ,MAASC,GAEXQ,IAAK,kBACLC,gBAAiBC,OAAO,MAAyBC,aAIjD,EAA8BC,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoBH,IAAMC,SAAS,IAAnC,mBACA,GADA,UAC0BD,IAAMC,SAAS,KAAzC,mBACA,GADA,UACsBD,IAAMC,SAAuB,KAAnD,mBACA,GADA,UAC4BD,IAAMC,UAAS,IAA3C,mBAAOG,EAAP,KAEIC,GAFJ,KAEkB,iDAAG,qGACrBF,GAAW,GACXzD,QAAQC,IAAI,WAFS,SAGHkC,EAAMyB,IAAN,qBAAoC5C,OAAOI,YAHxC,OAGfqB,EAHe,OAGsDoB,KAAKpB,GAChFzC,QAAQC,IAAIwC,GACZqB,EAAWrB,GALU,2CAAH,sDAQdqB,EAAU,iDAAG,WAAOrB,GAAP,iGACMzB,OAAOU,SAASH,QAAQwC,aAAavB,EAASC,IADpD,UACXuB,EADW,OAEjBhE,QAAQC,IAAI+D,IACRN,EAHa,uBAIfD,GAAW,GAJI,8DAAH,sDAqBZ,OAbAH,IAAMW,WACJ,WACMjD,OAAOC,iBAAiBiD,aAC1BlE,QAAQC,IAAI,aACFe,OAAOC,iBAAiBiD,cAClClE,QAAQC,IAAI,mBAGhB,IAKGe,OAAOC,iBAAiBiD,aAiBzB,qBAAKC,UAAU,MAAf,SACA,iCACE,gDACF,uBACA,mBAAGC,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,6BAGA,cAACC,EAAA,EAAD,CAAQC,QAAUhB,EAA8B,iBAApB,kBAAsCiB,SAAUjB,EAASkB,QAASf,EAA9F,qBACA,cAACY,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAAS/C,EAAnC,mCAvBA,qBAAKwC,UAAU,MAAf,SACA,iCACE,gDACF,uBACA,mBAAGC,MAAO,CAACC,UAAW,SAAUC,UAAW,SAA3C,qDAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASzC,EAAnC,+BAAkE,UCrEpE0C,EAAOC,IAASC,WACpBC,SAASC,eAAe,SAW1B/D,OAAOgE,gBHfA,WAAP,+BGeyBC,GACpBC,MAAK,WACJlF,QAAQC,IAAI,yBAA0Be,OAAOgE,iBAEnDL,EAAKQ,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UAIHC,OAAM,SAACC,GACNtF,QAAQC,IAAIqF,Q","file":"static/js/main.d16aaeec.chunk.js","sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { getConfig } from './config';\n\nlet nearConfig = getConfig('testnet');\nconst keyStore: keyStores.BrowserLocalStorageKeyStore = new keyStores.BrowserLocalStorageKeyStore();\n\nexport async function initContract(): Promise<Contract> {\n    console.log('initContract');\n    const near = await connect({ keyStore, headers: {}, ...nearConfig});\n    window.walletConnection = new WalletConnection(near, nearConfig.contractName.split('.')[0]);\n    window.accountId = window.walletConnection.getAccountId();\n    window.contract = await new Contract(window.walletConnection.account(), nearConfig.contractName, {\n        viewMethods: ['get_saled_ids', 'get_saled_tokens', 'get_token_by_id', 'get_current_block'],\n        changeMethods: ['nft_mint', 'get_account_and_current_block'],\n    });\n    return window.contract;\n}\n\nexport function logout() {\n    window.walletConnection.signOut();\n    window.location.replace(window.location.origin + window.location.pathname);\n}\n\nexport function login() {\n    window.walletConnection.requestSignIn(nearConfig.contractName);\n}","//import { NearConfig } from \"near-api-js/lib/near\";\nconst CONTRACT_NAME_TESTNET = 'hc.jeph.testnet';\nconst CONTRACT_NAME_MAINNET = 'hc.jeph.near';\n\nexport function getConfig(env: string) {\n  console.log('getConfig', env);\n    switch (env) {\n        case 'production':\n        case 'mainnet':\n          return {\n            networkId: 'mainnet',\n            nodeUrl: 'https://rpc.mainnet.near.org',\n            contractName: CONTRACT_NAME_MAINNET,\n            walletUrl: 'https://wallet.near.org',\n            helperUrl: 'https://helper.mainnet.near.org',\n            explorerUrl: 'https://explorer.mainnet.near.org',\n          }\n        case 'development':\n        case 'testnet':\n          return {\n            networkId: 'testnet',\n            nodeUrl: 'https://rpc.testnet.near.org',\n            contractName: CONTRACT_NAME_TESTNET,\n            walletUrl: 'https://wallet.testnet.near.org',\n            helperUrl: 'https://helper.testnet.near.org',\n            explorerUrl: 'https://explorer.testnet.near.org',\n          }\n        default:\n          throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n        }\n}","import React from 'react';\n// import './App.css';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { IdResponse } from './models/idResponse';\nimport { login, logout } from './utils';\nimport { FunctionCallOptions } from 'near-api-js/lib/account';\nimport textToImage from 'text-to-image';\n\nconst hc_db = axios.create({\n  baseURL: 'https://howler-api.juanenriqueenr4.repl.co/api/ids',\n})\n\n\nfunction App() {\n\n  const nft_mint = (id: number) : FunctionCallOptions => {\n    const dataUri = textToImage.generateSync(`${id}`, {\n      fontSize: 24,\n      fontFamily: 'Arial',\n    });\n    return {\n  contractId: window.contract.contractId,\n  methodName: \"nft_mint\",\n  args:\n  {\n    \"token_id\": id,\n    \"media\": dataUri,\n  },\n  gas: \"300000000000000\", \n  attachedDeposit: BigInt(10000000000000000000000).toString(),\n    }\n  }\n\n  const [loading, setLoading] = React.useState(false);\n  const [id, setId] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [ids, setIds] = React.useState<IdResponse[]>([]);\n  const [minted, setMinted] = React.useState(false);\n\nconst handleSeparate = async () => {\n  setLoading(true);\n  console.log('minting');\n  const id = (await hc_db.get<IdResponse>(`/id?userId=${window.accountId}`)).data.id;\n  console.log(id);\n  handleMint(id);\n}\n\nconst handleMint = async (id: number) => {\n  const response = await window.contract.account.functionCall(nft_mint(id));\n  console.log(response);\n  if (minted) {\n    setLoading(false);\n    return;\n  }\n}\n    React.useEffect(\n      () => {\n        if (window.walletConnection.isSignedIn()) {\n          console.log(\"signed in\");\n        } else if (!window.walletConnection.isSignedIn()) {\n          console.log(\"not signed in\");\n        }\n      },\n      [\n        //window.walletConnection.isSignedIn()\n      ]\n    )\n\n    if (!window.walletConnection.isSignedIn()) {\n      return (\n        <div className='App'>\n        <main>\n          <h2>Howler Carayas</h2>\n        <hr />\n        <p style={{textAlign: 'center', marginTop: '2.5em'}}>\n      Por favor inicia sesión para mintear\n        </p>\n        <Button variant=\"primary\" onClick={login}>Iniciar Sesión</Button>{' '}\n        </main>\n        </div>\n      );\n    }\n\n    else {\n      return (\n        <div className='App'>\n        <main>\n          <h2>Howler Carayas</h2>\n        <hr />\n        <p style={{textAlign: 'center', marginTop: '2.5em'}}>\n      ¡Bienvenido!\n        </p>\n        <Button variant={!loading ? 'outline-success' : 'outline-danger'} disabled={loading} onClick={handleSeparate}>Mintear</Button>\n        <Button variant=\"primary\" onClick={logout}>Cerrar Sesión</Button>\n        </main>\n        </div>\n      );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nimport { initContract } from './utils'\nimport { Contract, WalletConnection } from 'near-api-js';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\ndeclare global {\n  interface Window {\n    nearInitPromise: Promise<void | JSX.Element>\n    walletConnection: WalletConnection;\n    accountId: string | null;\n    contract: Contract;\n  }\n}\n\nwindow.nearInitPromise = initContract()\n    .then(() => {\n      console.log(\"window.nearInitPromise\", window.nearInitPromise);\n      //console.log('Near contract initialized:', window.contract);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n})\n.catch((err: string) => {\n  console.log(err)\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}